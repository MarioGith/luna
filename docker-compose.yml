services:
  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg15
    container_name: luna-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: luna
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - luna-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Next.js Application for local development
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: luna-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/luna?schema=public
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-for-local-development
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
      - ALLOWED_GITHUB_USERNAME=${ALLOWED_GITHUB_USERNAME}
    volumes:
      - ./uploads:/app/uploads
      - ./prisma:/app/prisma
      - ./.env:/app/.env
    ports:
      - "3000:3000"
    networks:
      - luna-network
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Generating Prisma client...' &&
        npx prisma generate &&
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Starting Next.js server...' &&
        node server.js
      "

volumes:
  postgres_data:

networks:
  luna-network:
    driver: bridge
